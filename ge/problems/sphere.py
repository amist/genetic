from ..core.individual import Individualimport randomclass Sphere(Individual):    def __init__(self, **kwargs):        super().__init__()        self.size =        kwargs.get('size', 10)        self.lower_bound = kwargs.get('lower_bound', -5)        self.upper_bound = kwargs.get('upper_bound', 6)                self.chromosome = [random.uniform(self.lower_bound, self.upper_bound) for _ in range(self.size)]        self.fitness_value = None                    def get_fitness_value(self):        if self.fitness_value is not None:            return self.fitness_value        self.fitness_value = sum([x*x for x in self.chromosome])        return self.fitness_value        